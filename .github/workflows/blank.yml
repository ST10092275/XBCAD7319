name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          build-tools: 33.0.2

      - name: Set execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build the project
        run: ./gradlew assembleDebug

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Run Detekt (Static Code Analysis for Kotlin)
        run: ./gradlew detekt

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./build/reports/jacoco/testDebugUnitTest.exec

      - name: Upload Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: ./build/outputs/apk/debug/app-debug.apk

      - name: Deploy to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_AUTH_TOKEN}}
          groups: testers
          file: ./build/outputs/apk/debug/app-debug.apk

      # Security Testing Step using Snyk
      - name: Snyk Security Test for Vulnerabilities
        uses: snyk/actions/python@v1
        with:
          snyk-token: ${{ secrets.SNYK_TOKEN }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk test --all-projects  # Checks for vulnerabilities in all projects, including dependencies
